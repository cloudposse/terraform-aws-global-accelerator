---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-global-accelerator

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2021"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-global-accelerator

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-global-accelerator.svg"
    url: "https://github.com/cloudposse/terraform-aws-global-accelerator/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"
  - name: "Discourse Forum"
    image: "https://img.shields.io/discourse/https/ask.sweetops.com/posts.svg"
    url: "https://ask.sweetops.com/"

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: "Terraform Standard Module Structure"
    description: "HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories."
    url: "https://www.terraform.io/docs/modules/index.html#standard-module-structure"
  - name: "Terraform Module Requirements"
    description: "HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy."
    url: "https://www.terraform.io/docs/registry/modules/publish.html#requirements"
  - name: "Terraform `random_integer` Resource"
    description: "The resource random_integer generates random values from a given range, described by the min and max attributes of a given resource."
    url: "https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/integer"
  - name: "Terraform Version Pinning"
    description: "The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration"
    url: "https://www.terraform.io/docs/configuration/terraform.html#specifying-a-required-terraform-version"

# Short description of this project
description: |-
  This module provisions AWS Global Accelerator. Multiple listeners can be specified when instantiating this module.
  The `endpoint-group` submodule provisions a Global Accelerator Endpoint Group for a listener created by this module and can be instantiated multiple times
  in order to provision multiple Endpoint Groups.

  The reason why `endpoint-group` is its own submodule is because an AWS Provider needs to be instantiated for the region the Endpoint Group's endpoints reside in.
  For more information, see the [endpoint-group documentation](modules/endpoint-group/README.md).

# Introduction to the project
#introduction: |-
#  This is an introduction.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete examples, see [examples/](examples/).

  The following deploys Global Accelerator with endpoints in a single region:

  ```hcl
  module "global_accelerator" {
    source = "cloudposse/global-accelerator/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    context = module.this.context

    ip_address_type     = "IPV4"
    flow_logs_enabled   = true
    flow_logs_s3_prefix = "logs/"
    flow_logs_s3_bucket = module.s3_bucket.bucket_id

    listeners = [
      {
        client_affinity = "NONE"
        protocol = "TCP"
        port_ranges = [
          {
            from_port = 80
            to_port = 80
          }
        ]
      }
    ]
  }

  module "endpoint_group" {
    source = "cloudposse/global-accelerator/aws//modules/endpoint-group"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    context = module.this.context

    listener_arn = module.global_accelerator.listener_ids[0]
    config       = {
      endpoint_region = "us-east-2"
      endpoint_configuration = [
        {
          endpoint_lb_name = "my-load-balancer"
        }
      ]
    }
  }
  ```

  The following deploys Global Accelerator with endpoints in multiple regions:

  ```hcl
  module "global_accelerator" {
    source = "cloudposse/global-accelerator/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    context = module.this.context

    ip_address_type     = "IPV4"
    flow_logs_enabled   = true
    flow_logs_s3_prefix = "logs/"
    flow_logs_s3_bucket = module.s3_bucket.bucket_id

    listeners = [
      {
        client_affinity = "NONE"
        protocol = "TCP"
        port_ranges = [
          {
            from_port = 80
            to_port = 80
          }
        ]
      }
    ]
  }

  module "endpoint_group" {
    source = "cloudposse/global-accelerator/aws//modules/endpoint-group"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    context = module.this.context

    listener_arn = module.global_accelerator.listener_ids[0]
    config       = {
      endpoint_region = "us-east-2"
      endpoint_configuration = [
        {
          endpoint_lb_name = "my-load-balancer"
        }
      ]
    }
  }

  module "endpoint_group_failover" {
    source = "cloudposse/global-accelerator/aws//modules/endpoint-group"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    context = module.failover_label.context

    listener_arn = module.global_accelerator.listener_ids[0]
    config       = {
      endpoint_region = "us-west-2"
      endpoint_configuration = [
        {
          endpoint_lb_name = "my-failover-load-balancer"
        }
      ]
    }

    providers = {
     aws = aws.failover
    }
  }
  ```

# Example usage
examples: |-
  Here are some examples of using this module:
  - [`examples/complete`](examples/complete/) - complete example of using this module
  - [`examples/multiple_endpoints`](examples/multiple_endpoints/) - multi-region example

# How to get started quickly
#quickstart: |-
#  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Yonatan Koren"
    github: "korenyoni"
